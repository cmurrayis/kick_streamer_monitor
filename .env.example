# Kick Streamer Status Monitor - Environment Configuration Template
# Copy this file to .env and configure with your actual values
# 
# IMPORTANT: Never commit your actual .env file to version control
# Add .env to your .gitignore file to prevent accidental commits

# =============================================================================
# KICK.COM API CONFIGURATION (Required)
# =============================================================================
# Register your application at https://dev.kick.com/ to obtain these credentials
# These are required for OAuth authentication and API access

# Your Kick.com application client ID
KICK_CLIENT_ID=your_kick_client_id_here

# Your Kick.com application client secret (keep this secure!)
KICK_CLIENT_SECRET=your_kick_client_secret_here

# OAuth configuration (optional - defaults provided)
# Time in seconds before token expiry to refresh (default: 300)
AUTH_TOKEN_REFRESH_MARGIN=300

# Maximum OAuth retry attempts on failure (default: 3)
AUTH_MAX_RETRY_ATTEMPTS=3

# =============================================================================
# DATABASE CONFIGURATION (Required)
# =============================================================================
# PostgreSQL database connection settings
# Ensure PostgreSQL is installed and running before starting the monitor

# Database server hostname or IP address
DATABASE_HOST=localhost

# Database server port (default PostgreSQL port: 5432)
DATABASE_PORT=5432

# Database name (will be created if it doesn't exist)
DATABASE_NAME=kick_monitor

# Database username with CREATE/READ/WRITE permissions
DATABASE_USER=kick_monitor_user

# Database password (keep this secure!)
DATABASE_PASSWORD=your_secure_database_password_here

# Connection pool settings (optional - defaults provided)
# Minimum number of database connections to maintain (default: 10)
DATABASE_POOL_SIZE=10

# Maximum overflow connections beyond pool size (default: 20)
DATABASE_MAX_OVERFLOW=20

# Query timeout in seconds (default: 30)
DATABASE_QUERY_TIMEOUT=30

# =============================================================================
# MONITORING CONFIGURATION (Optional)
# =============================================================================
# Configure monitoring behavior and performance settings

# Status update interval in seconds (default: 5)
# Lower values = more frequent updates, higher resource usage
MONITORING_STATUS_UPDATE_INTERVAL=5

# WebSocket reconnection delay in seconds (default: 10)
MONITORING_RECONNECT_DELAY=10

# Maximum WebSocket reconnection attempts before giving up (default: 5)
MONITORING_MAX_RECONNECT_ATTEMPTS=5

# Batch size for processing events (default: 50)
EVENT_PROCESSING_BATCH_SIZE=50

# Event processing timeout in seconds (default: 30)
EVENT_PROCESSING_TIMEOUT=30

# =============================================================================
# PUSHER WEBSOCKET CONFIGURATION (Optional)
# =============================================================================
# Kick.com uses Pusher for real-time WebSocket communication
# These settings are usually discovered automatically via API

# Pusher application key (default for Kick.com: d44c06c23c42fd6e5c58)
PUSHER_APP_KEY=d44c06c23c42fd6e5c58

# Pusher cluster (default for Kick.com: us2)
PUSHER_CLUSTER=us2

# Custom WebSocket URL (optional - auto-discovered if not set)
# PUSHER_WEBSOCKET_URL=wss://ws-us2.pusher.com/socket

# WebSocket connection timeout in seconds (default: 30)
PUSHER_CONNECTION_TIMEOUT=30

# Heartbeat interval in seconds (default: 30)
PUSHER_HEARTBEAT_INTERVAL=30

# =============================================================================
# SYSTEM CONFIGURATION (Optional)
# =============================================================================
# General system and logging configuration

# Application log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
SYSTEM_LOG_LEVEL=INFO

# Maximum log file size in bytes (default: 10MB)
SYSTEM_MAX_LOG_FILE_SIZE=10485760

# Log file retention in days (default: 7)
SYSTEM_LOG_RETENTION_DAYS=7

# Log file directory (default: logs/)
SYSTEM_LOG_DIRECTORY=logs

# Enable structured JSON logging (true/false, default: false)
SYSTEM_JSON_LOGGING=false

# Enable performance metrics collection (true/false, default: true)
SYSTEM_ENABLE_METRICS=true

# =============================================================================
# RATE LIMITING CONFIGURATION (Optional)
# =============================================================================
# Configure rate limiting to comply with Kick.com API limits

# Maximum API requests per minute (default: 60)
API_RATE_LIMIT_PER_MINUTE=60

# Maximum WebSocket subscriptions per connection (default: 100)
WEBSOCKET_MAX_SUBSCRIPTIONS=100

# Request retry delay in seconds (default: 1)
API_RETRY_DELAY=1

# Maximum concurrent API requests (default: 10)
API_MAX_CONCURRENT_REQUESTS=10

# =============================================================================
# SECURITY CONFIGURATION (Optional)
# =============================================================================
# Security-related settings

# Enable configuration encryption for sensitive values (true/false, default: false)
CONFIG_ENABLE_ENCRYPTION=false

# Encryption key for sensitive configuration (generate with: openssl rand -hex 32)
# CONFIG_ENCRYPTION_KEY=your_32_char_hex_encryption_key_here

# Enable API request signing for additional security (true/false, default: false)
API_ENABLE_REQUEST_SIGNING=false

# =============================================================================
# DEVELOPMENT/TESTING CONFIGURATION (Optional)
# =============================================================================
# Settings for development and testing environments

# Enable development mode with additional logging (true/false, default: false)
DEVELOPMENT_MODE=false

# Mock WebSocket connections for testing (true/false, default: false)
TESTING_MOCK_WEBSOCKET=false

# Test database settings (only used in testing)
# TEST_DATABASE_HOST=localhost
# TEST_DATABASE_PORT=5432
# TEST_DATABASE_NAME=kick_monitor_test
# TEST_DATABASE_USER=kick_monitor_test
# TEST_DATABASE_PASSWORD=test_password

# =============================================================================
# MANUAL MODE CONFIGURATION (Optional)
# =============================================================================
# Configuration for the interactive manual monitoring mode

# Display refresh rate in seconds (default: 2.0)
MANUAL_MODE_REFRESH_RATE=2.0

# Maximum streamers to display simultaneously (default: 50)
MANUAL_MODE_MAX_STREAMERS=50

# Enable colored output (true/false, default: true)
MANUAL_MODE_COLORS=true

# Display theme (default, dark, light, minimal)
MANUAL_MODE_THEME=default

# =============================================================================
# STREAMERS CONFIGURATION (Optional)
# =============================================================================
# Configure which streamers to monitor

# Comma-separated list of streamer usernames to monitor
# STREAMERS_TO_MONITOR=xqc,trainwreckstv,sodapoppin

# Comma-separated list of Kick user IDs to monitor
# STREAMER_USER_IDS=12345,67890,11111

# Auto-discover streamers from followed list (requires additional API permissions)
# STREAMERS_AUTO_DISCOVER=false

# =============================================================================
# NOTIFICATION CONFIGURATION (Optional)
# =============================================================================
# Configure notifications for streamer status changes

# Enable notifications (true/false, default: false)
NOTIFICATIONS_ENABLED=false

# Notification methods (webhook, email, discord)
# NOTIFICATION_METHODS=webhook

# Webhook URL for notifications
# NOTIFICATION_WEBHOOK_URL=https://your-webhook-url.com/notifications

# Discord webhook URL
# NOTIFICATION_DISCORD_WEBHOOK=https://discord.com/api/webhooks/your-webhook

# Email notification settings
# NOTIFICATION_EMAIL_SMTP_HOST=smtp.gmail.com
# NOTIFICATION_EMAIL_SMTP_PORT=587
# NOTIFICATION_EMAIL_USERNAME=your-email@gmail.com
# NOTIFICATION_EMAIL_PASSWORD=your-app-password
# NOTIFICATION_EMAIL_TO=recipient@example.com

# =============================================================================
# BACKUP AND RECOVERY (Optional)
# =============================================================================
# Configure data backup and recovery options

# Enable automatic database backups (true/false, default: false)
BACKUP_ENABLED=false

# Backup frequency in hours (default: 24)
BACKUP_FREQUENCY_HOURS=24

# Backup retention in days (default: 7)
BACKUP_RETENTION_DAYS=7

# Backup directory path
BACKUP_DIRECTORY=backups

# =============================================================================
# HEALTH CHECK CONFIGURATION (Optional)
# =============================================================================
# Configure health checking and monitoring

# Enable health check endpoint (true/false, default: true)
HEALTH_CHECK_ENABLED=true

# Health check port (default: 8080)
HEALTH_CHECK_PORT=8080

# Health check interval in seconds (default: 60)
HEALTH_CHECK_INTERVAL=60

# =============================================================================
# EXAMPLE CONFIGURATION SETUP CHECKLIST
# =============================================================================
# 
# 1. REGISTER KICK.COM APPLICATION:
#    - Go to https://dev.kick.com/
#    - Create a new application
#    - Copy the Client ID and Client Secret
#    - Set redirect URI if needed
#
# 2. SETUP POSTGRESQL DATABASE:
#    - Install PostgreSQL 12+ 
#    - Create database: CREATE DATABASE kick_monitor;
#    - Create user: CREATE USER kick_monitor_user WITH PASSWORD 'your_password';
#    - Grant permissions: GRANT ALL PRIVILEGES ON DATABASE kick_monitor TO kick_monitor_user;
#
# 3. CONFIGURE ENVIRONMENT:
#    - Copy this file to .env
#    - Replace all "your_*_here" values with actual credentials
#    - Set appropriate log levels and intervals
#    - Add .env to .gitignore
#
# 4. TEST CONFIGURATION:
#    - Run: kick-monitor config validate
#    - Run: kick-monitor db migrate
#    - Run: kick-monitor start --manual
#
# 5. PRODUCTION DEPLOYMENT:
#    - Set SYSTEM_LOG_LEVEL=INFO or WARNING
#    - Configure appropriate monitoring intervals
#    - Set up log rotation
#    - Configure backups if needed
#    - Set up monitoring/alerting
#
# =============================================================================
# SECURITY NOTES
# =============================================================================
#
# - NEVER commit this file with real credentials to version control
# - Use environment-specific .env files (.env.production, .env.staging)
# - Regularly rotate API keys and database passwords
# - Use strong, unique passwords for database access
# - Consider using a secrets management system for production
# - Monitor API usage to detect unusual activity
# - Keep the application and dependencies up to date
#
# =============================================================================